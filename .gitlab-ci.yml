image: maven:3-jdk-10

stages:
  - build
  - test
  - coverage
  - checkstyle

variables:
  ## 'clean' is necessary for JaCoCo aggregate report
  ## --batch-mode will avoid asking input in the terminal
  MAVEN: "clean --batch-mode"

##Stage will fail if it doesn't compile
build:
  stage: build
  script:
    - mvn $MAVEN compile

##If >1 test fails than stage fails
test:
  stage: test
  ## make the code coverage reports created in this stage available to further stages
  artifacts:
    untracked: true
  script:
    - mvn $MAVEN test jacoco:report jacoco:report-aggregate

##
coverage:
  stage: coverage
  ## get the code coverage reports generated in the previous stage
  dependencies:
    - test
  script:
#     - client=$(awk -F"," '{ branches += $6 + $7; covered += $7 } END { print "\n-- CLIENT COVERAGE REPORT --"; print covered, "/", branches, "branches covered"; print int(100*covered/branches), "%% covered\n----------------------------\n" }' client/target/site/jacoco/jacoco.csv)
#     - server=$(awk -F"," '{ branches += $6 + $7; covered += $7 } END { print "\n-- SERVER COVERAGE REPORT --"; print covered, "/", branches, "branches covered"; print int(100*covered/branches), "%% covered\n----------------------------\n" }' server/target/site/jacoco/jacoco.csv)
#     - total=$(awk -F"," '{ branches += $6 + $7; covered += $7 } END { print "\n-- TOTAL COVERAGE REPORT --"; print covered, "/", branches, "branches covered"; print int(100*covered/branches), "%% covered\n---------------------------\n" }' tests/target/site/jacoco-aggregate/jacoco.csv)
#     - printf "$client\n$server\n$total\n\n"

checkstyle:
  stage: checkstyle
  script:
    - mvn $MAVEN site
#     - files=$(cat target/site/checkstyle-aggregate.html | grep -A4 "<tr class=\"b\">" | head -n 2 | tail -n 1 | grep -o '<td>.*</td>' | sed -e 's/<td>\(.*\)<\/td>/\1/')
#     - warnings=$(cat target/site/checkstyle-aggregate.html | grep -A4 "<tr class=\"b\">" | head -n 4 | tail -n 1 | grep -o '<td>.*</td>' | sed -e 's/<td>\(.*\)<\/td>/\1/')
#     - errors=$(cat target/site/checkstyle-aggregate.html | grep -A4 "<tr class=\"b\">" | head -n 5 | tail -n 1 | grep -o '<td>.*</td>' | sed -e 's/<td>\(.*\)<\/td>/\1/')
#     - printf "\n-- CHECKSTYLE REPORT --\n$files files\n$errors errors\n$warnings warnings\n-----------------------\n\n"
