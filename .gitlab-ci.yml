image: maven:3.6.0-jdk-10

stages:
  - build
  - test
  - coverage
  - checkstyle

##Stage will fail if it doesn't compile
build:
  stage: build
  script:
    - mvn clean validate compile

##If more than 1 test fails, the whole pipeline fails
test:
  stage: test
  ## create this report and make it available for the coverage and checkstyle report after this one
  artifacts:
    untracked: true
  script:
    - mvn test jacoco:report jacoco:report-aggregate

##
coverage:
  stage: coverage
  ## use the previous report
  dependencies:
    - test
  script: 
    - coverage=$(awk -F"," '{ branches += $6 + $7; covered += $7 } END { print "\nCOVERAGE REPORT"; print covered, "/", branches, "branches covered"; print double(100*covered/branches), "%% covered\n----------------------------\n" }' target/site/jacoco/jacoco.csv)
    # - aggregate=$(awk -F"," '{ branches += $6 + $7; covered += $7 } END { print "\nAGGREGATE COVERAGE REPORT"; print covered, "/", branches, "branches covered"; print int(100*covered/branches), "%% covered\n---------------------------\n" }' target/site/jacoco-aggregate/jacoco.csv)
    - printf "$coverage"
  coverage: "Total.*?([0-9]{1,3})%"

checkstyle:
  stage: checkstyle
  script:
    - mvn site
    - files=$(cat target/site/checkstyle.html | grep -A4 "<tr class=\"b\">" | head -n 2 | tail -n 1 | grep -o '<td>.*</td>' | sed -e 's/<td>\(.*\)<\/td>/\1/')
    - warnings=$(cat target/site/checkstyle.html | grep -A4 "<tr class=\"b\">" | head -n 4 | tail -n 1 | grep -o '<td>.*</td>' | sed -e 's/<td>\(.*\)<\/td>/\1/')
    - errors=$(cat target/site/checkstyle.html | grep -A4 "<tr class=\"b\">" | head -n 5 | tail -n 1 | grep -o '<td>.*</td>' | sed -e 's/<td>\(.*\)<\/td>/\1/')
    - printf "\n-- CHECKSTYLE REPORT --\n$files files\n$errors errors\n$warnings warnings\n-----------------------\n\n"